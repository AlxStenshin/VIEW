var OLED_BIN_PATH = "/home/view/current/bin/menu";
var EventEmitter = require("events").EventEmitter;
var spawn = require('child_process').spawn;
var exec = require('child_process').exec;

var oled = new EventEmitter();

var oledProcess = null;
var defaultStatus = "";

oled.running = false;
oled.items = [];
oled.selected = 0;
oled.visible = false;

var stop = false;

exec("killall menu");

oled.init = function() {
    stop = false;
    oledProcess = spawn(OLED_BIN_PATH);
    oled.visible = true;
    console.log("oled process started");
    oledProcess.stdout.on('data', function(chunk) {
        oled.running = true;
        console.log("oled stdout: " + chunk.toString());
    });
    oledProcess.stderr.on('data', function(chunk) {
        //console.log("oled stderr: " + chunk.toString());
        chunk = null;
    });
    oledProcess.on('close', function(code) {
        console.log("oled process exited");
        oled.running = false;
        if (stop) {
            oled.visible = false;
        } else {
            setTimeout(function() {
                oled.init();
                setTimeout(function() {
                    if (oled.items) {
                        var s = oled.selected;
                        oled.create(oled.items);
                        oled.select(s);
                    }
                });
            });
        }
    });
    oled.activity();
}

function oledWrite(dataString) {
    if (oled.running && oledProcess.stdin) {
        oledProcess.stdin.write(dataString);
    }
}

oled.writeMenu = function() {
    var itemArray = oled.items;
    var list = [];
    var selected;
    if (oled.selected < 0) oled.selected = 0;

    if (oled.setting) {
        if (oled.selected >= oled.setting.length) oled.selected = oled.setting.length - 1;
        var name = oled.setting[oled.selected].name || '';
        var value = oled.setting[oled.selected].value || '';
        oledWrite("VALUE=" + name + "|" + value + "|\n");
    } else {
        oledWrite("VALUE=||\n");
        if (itemArray.length <= 3) {
            list = itemArray;
            selected = oled.selected;
        } else if (oled.selected == itemArray.length - 1) {
            list = itemArray.slice(oled.selected - 2, oled.selected + 3);
            selected = 2;
        } else if (oled.selected == 0) {
            list = itemArray.slice(0, 5);
            selected = 0;
        } else {
            list = itemArray.slice(oled.selected - 1, oled.selected + 4);
            selected = 1;
        }
        if (!selected) selected = 0;
        if (oled.selected >= oled.list.length) oled.selected = oled.list.length - 1;
        oledWrite("MENU=" + list.join("|") + "|\n");

        var tens = Math.floor(selected / 10);
        var ones = selected - tens;
        if (tens > 9) tens = 9;
        if (ones > 9) ones = 9;

        oledWrite("SELECT=" + tens.toString() + ones.toString() + "\n");
    }
}

var screenTimeout = null;
oled.create = function(itemArray, selected) {
    oled.setting = null;
    oled.items = itemArray;
    oled.selected = selected || 0;
    oled.writeMenu();
}

oled.value = function(pairs, selected) {
    oled.setting = pairs;
    oled.selected = selected || 0;
    oled.writeMenu();
}

oled.select = function(index) {
    oled.selected = index;
}

oled.activity = function() {
    if (screenTimeout) clearTimeout(screenTimeout);
    screenTimeout = setTimeout(oled.hide, 15000);
    if (!oled.visible) oled.show();
}

oled.update = function() {
    oledWrite("DISPLAY\n");
}

oled.up = function() {
    if (oled.selected > 0) {
        oled.selected--;
        oled.select(oled.selected);
        oled.writeMenu();
        oled.update();
    }
}

oled.down = function() {
    if (oled.setting || oled.selected < oled.items.length - 1) {
        oled.selected++;
        oled.select(oled.selected);
        oled.writeMenu();
        oled.update();
    }
}

oled.hide = function() {
    oledWrite("HIDE\n");
    oled.visible = false;
}

oled.show = function() {
    oledWrite("SHOW\n");
    oled.visible = true;
}

oled.close = function() {
    stop = true;
    console.log("oled process exiting...");
    oledWrite('QUIT\n');
}

oled.jpeg = function(jpegFile) {
    oledWrite("JPEG=" + jpegFile + "\n");
}

oled.png = function(pngFile) {
    oledWrite("PNG=" + pngFile + "\n");
}

function writeStatus(status) {
    console.log("setting oled status:", status);
    oledWrite("STATUS=" + status + "|\n");
    oled.writeMenu();
    oled.update();
}

var statusTimeoutHandle = null;

oled.status = function(status) {
    if(statusTimeoutHandle) clearTimeout(statusTimeoutHandle);
    if(status) {
        writeStatus(status);
        if(defaultStatus) {
            statusTimeoutHandle = setTimeout(function(){
                writeStatus(defaultStatus);
            }, 6000);
        }
    } else {
        writeStatus(defaultStatus);
    }
}

oled.defaultStatus = function(status) {
    defaultStatus = status;
}

oled.video = function(videoPathFormat, frames) {
    oledWrite("VIDEO=" + frames.toString() + ":" + videoPathFormat + "\n");
}


module.exports = oled;